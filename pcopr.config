#
# pcopr.config - pcopr tools config file
#
# https://github.com/pcmoore/copr-pkg_scripts
#

# user information
#  examples:
#   USER_NAME="J. Doe"
#   USER_EMAIL="jdoe@guest.org"
USER_NAME=""
USER_EMAIL=""

# copr information
#  you can signup for a COPR account here: https://copr.fedorainfracloud.org
#  examples:
#   COPR_USER="jdoe" (NOTE: this will likely also be your FAS account)
#   COPR_PROJECT="awesome-stuff"
#   COPR_URL="https://copr.fedorainfracloud.org/coprs/$COPR_USER/$COPR_PROJECT"
COPR_USER=""
COPR_PROJECT=""
COPR_URL="https://copr.fedorainfracloud.org/coprs/$COPR_USER/$COPR_PROJECT"

# package information
#  used by the pconfig_srpm-* scripts to add a suffix to the RPM package
#  examples:
#   PKG_VARIANT="copr"
PKG_VARIANT=""

# local directories
#  local directories used to store the generated patches and SRPMs, if a
#  relative path is used here, it will be relative to the working directory
#  examples:
#   DIR_PATCHES="patches"
#   DIR_SRPMS="srpms"
DIR_PATCHES=""
DIR_SRPMS=""

# upstream source repository
#  local repository for the upstream project and patch/fixup directory, if
#  relative paths are used here, they will be relative to the working directory
#  examples:
#   DIR_REPO_SRC="awesome-stuff-upstream"
#   DIR_REPO_SRC_FIXES="$DIR_REPO_SRC-fixes"
DIR_REPO_SRC=""
DIR_REPO_SRC_FIXES="$DIR_REPO_SRC-fixes"

# package rpm repository
#  local repository for the project RPM repository and patch/fixup directory,
#  if relative paths are used here, they will be relative to the working
#  directory
#  examples:
#   DIR_REPO_RPM="awesome-stuff-fedora"
#   DIR_REPO_RPM_FIXES="$DIR_REPO_RPM-fixes"
DIR_REPO_RPM=""
DIR_REPO_RPM_FIXES="$DIR_REPO_RPM-fixes"

# upstream source patch base
#  branch to use as the base for all generated patches
#  examples:
#   PATCH_BRANCH_BASE_SRC="origin/master"
PATCH_BRANCH_BASE_SRC=""

# package rpm patch base
#  branch to use as the base for all generated SRPMs
#  examples:
#   PATCH_BRANCH_BASE_RPM="origin/master"
PATCH_BRANCH_BASE_RPM=""

# branches to check for patch creation
#  space separated list of branches to check when creating patches; branches
#  can be of the typical form "<remote>/<branch>" or "stable:<remote>"; in the
#  case of "stable:<remote>" the highest numbered (accoring to 'sort -V')
#  branch following the format of "stable-X[.Y[.Z[.n]]]" will be used.
#  examples:
#   PATCH_BRANCH_LIST="stable:development development/work-in-progress"
PATCH_BRANCH_LIST=""

# kate: syntax bash;
